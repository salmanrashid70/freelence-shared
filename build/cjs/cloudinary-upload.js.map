{"version":3,"file":"cloudinary-upload.js","names":["_cloudinary","_interopRequireDefault","require","e","__esModule","default","uploads","file","public_id","overwrite","invalidate","Promise","resolve","reject","cloudinary","v2","uploader","upload","chunk_size","resource_type","error","result","Error","videoUpload"],"sources":["../../src/cloudinary-upload.ts"],"sourcesContent":["import cloudinary, { UploadApiErrorResponse, UploadApiResponse } from 'cloudinary';\n\nexport function uploads(\n    file: string,\n    public_id?: string,\n    overwrite?: boolean,\n    invalidate?: boolean,\n): Promise<UploadApiResponse | UploadApiErrorResponse> {\n\n    return new Promise((resolve, reject) => {\n        cloudinary.v2.uploader.upload(\n            file,\n            {\n                public_id,\n                overwrite,\n                invalidate,\n                chunk_size: 6000000, // 6MB chunk size\n                resource_type: 'auto', // zipped files, images, etc\n            },\n            (error: UploadApiErrorResponse | undefined, result: UploadApiResponse | undefined) => {\n                if (error) resolve(error);\n                else if (result) resolve(result);\n                else reject(new Error('Unknown error occurred during upload.'));\n            }\n        );\n    });\n}\n\nexport function videoUpload(\n    file: string,\n    public_id?: string,\n    overwrite?: boolean,\n    invalidate?: boolean,\n): Promise<UploadApiResponse | UploadApiErrorResponse> {\n    return new Promise((resolve, reject) => {\n        cloudinary.v2.uploader.upload(\n            file,\n            {\n                public_id,\n                overwrite,\n                invalidate,\n                resource_type: 'video', // specify video resource type\n            },\n            (error: UploadApiErrorResponse | undefined, result: UploadApiResponse | undefined) => {\n                if (error) resolve(error);\n                else if (result) resolve(result);\n                else reject(new Error('Unknown error occurred during upload.'));\n            }\n        );\n    });\n}"],"mappings":";;;;;AAAA,IAAAA,WAAA,GAAAC,sBAAA,CAAAC,OAAA;AAAmF,SAAAD,uBAAAE,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAE,OAAA,EAAAF,CAAA;AAE5E,SAASG,OAAOA,CACnBC,IAAY,EACZC,SAAkB,EAClBC,SAAmB,EACnBC,UAAoB,EAC+B;EAEnD,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACpCC,mBAAU,CAACC,EAAE,CAACC,QAAQ,CAACC,MAAM,CACzBV,IAAI,EACJ;MACIC,SAAS;MACTC,SAAS;MACTC,UAAU;MACVQ,UAAU,EAAE,OAAO;MAAE;MACrBC,aAAa,EAAE,MAAM,CAAE;IAC3B,CAAC,EACD,CAACC,KAAyC,EAAEC,MAAqC,KAAK;MAClF,IAAID,KAAK,EAAER,OAAO,CAACQ,KAAK,CAAC,CAAC,KACrB,IAAIC,MAAM,EAAET,OAAO,CAACS,MAAM,CAAC,CAAC,KAC5BR,MAAM,CAAC,IAAIS,KAAK,CAAC,uCAAuC,CAAC,CAAC;IACnE,CACJ,CAAC;EACL,CAAC,CAAC;AACN;AAEO,SAASC,WAAWA,CACvBhB,IAAY,EACZC,SAAkB,EAClBC,SAAmB,EACnBC,UAAoB,EAC+B;EACnD,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACpCC,mBAAU,CAACC,EAAE,CAACC,QAAQ,CAACC,MAAM,CACzBV,IAAI,EACJ;MACIC,SAAS;MACTC,SAAS;MACTC,UAAU;MACVS,aAAa,EAAE,OAAO,CAAE;IAC5B,CAAC,EACD,CAACC,KAAyC,EAAEC,MAAqC,KAAK;MAClF,IAAID,KAAK,EAAER,OAAO,CAACQ,KAAK,CAAC,CAAC,KACrB,IAAIC,MAAM,EAAET,OAAO,CAACS,MAAM,CAAC,CAAC,KAC5BR,MAAM,CAAC,IAAIS,KAAK,CAAC,uCAAuC,CAAC,CAAC;IACnE,CACJ,CAAC;EACL,CAAC,CAAC;AACN","ignoreList":[]}