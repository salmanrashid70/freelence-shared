{"version":3,"file":"error-handler.js","names":["_httpStatusCodes","require","CustomError","Error","constructor","message","statusCode","comingFrom","statusText","getReasonPhrase","Object","setPrototypeOf","new","target","prototype","serializedError","exports","BadRequestError","StatusCodes","BAD_REQUEST","NotFoundError","NOT_FOUND","NotAuthorizedError","UNAUTHORIZED","FileTooLargeError","REQUEST_TOO_LONG","InternalServerError","INTERNAL_SERVER_ERROR","ServiceUnavailableError","SERVICE_UNAVAILABLE","ConflictError","CONFLICT","ForbiddenError","FORBIDDEN","TooManyRequestsError","TOO_MANY_REQUESTS"],"sources":["../../src/error-handler.ts"],"sourcesContent":["import { StatusCodes, getReasonPhrase } from 'http-status-codes';\r\n\r\nexport interface IErrorResponse {\r\n  message: string;\r\n  statusCode: number;\r\n  statusText: string;\r\n  comingFrom: string;\r\n  serializedError(): IError;\r\n}\r\nexport interface IError {\r\n  message: string;\r\n  statusCode: number;\r\n  statusText: string;\r\n  comingFrom: string;\r\n}\r\n\r\nexport interface ErrorNumberException extends Error {\r\n  errorNumber?: number;\r\n  errorCode?: string;\r\n  path?: string;\r\n  syscall?: string;\r\n  stack?: string;\r\n}\r\n\r\nexport abstract class CustomError extends Error implements IErrorResponse {\r\n  public statusCode: number;\r\n  public statusText: string;\r\n  public comingFrom: string;\r\n\r\n  constructor(message: string, statusCode: number, comingFrom = 'Unknown') {\r\n    super(message);\r\n    this.statusCode = statusCode;\r\n    this.statusText = getReasonPhrase(statusCode);\r\n    this.comingFrom = comingFrom;\r\n\r\n    // Ensures the custom error class maintains the correct prototype chain\r\n    // when compiled/transpiled from TypeScript to JavaScript, especially when extending built-in classes like Error.\r\n    Object.setPrototypeOf(this, new.target.prototype);\r\n  }\r\n\r\n  serializedError(): IError {\r\n    return {\r\n      message: this.message,\r\n      statusCode: this.statusCode,\r\n      statusText: this.statusText,\r\n      comingFrom: this.comingFrom,\r\n    };\r\n  }\r\n}\r\n\r\nexport class BadRequestError extends CustomError {\r\n  constructor(message: string, comingFrom: string) {\r\n    super(message, StatusCodes.BAD_REQUEST, comingFrom);\r\n  }\r\n}\r\n\r\nexport class NotFoundError extends CustomError {\r\n  constructor(message: string, comingFrom: string) {\r\n    super(message, StatusCodes.NOT_FOUND, comingFrom);\r\n  }\r\n}\r\n\r\nexport class NotAuthorizedError extends CustomError {\r\n  constructor(message: string, comingFrom: string) {\r\n    super(message, StatusCodes.UNAUTHORIZED, comingFrom);\r\n  }\r\n}\r\n\r\nexport class FileTooLargeError extends CustomError {\r\n  constructor(message: string, comingFrom: string) {\r\n    super(message, StatusCodes.REQUEST_TOO_LONG, comingFrom);\r\n  }\r\n}\r\n\r\nexport class InternalServerError extends CustomError {\r\n  constructor(message: string, comingFrom: string) {\r\n    super(message, StatusCodes.INTERNAL_SERVER_ERROR, comingFrom);\r\n  }\r\n}\r\n\r\nexport class ServiceUnavailableError extends CustomError {\r\n  constructor(message: string, comingFrom: string) {\r\n    super(message, StatusCodes.SERVICE_UNAVAILABLE, comingFrom);\r\n  }\r\n}\r\n\r\nexport class ConflictError extends CustomError {\r\n  constructor(message: string, comingFrom: string) {\r\n    super(message, StatusCodes.CONFLICT, comingFrom);\r\n  }\r\n}\r\n\r\nexport class ForbiddenError extends CustomError {\r\n  constructor(message: string, comingFrom: string) {\r\n    super(message, StatusCodes.FORBIDDEN, comingFrom);\r\n  }\r\n}\r\n\r\nexport class TooManyRequestsError extends CustomError {\r\n  constructor(message: string, comingFrom: string) {\r\n    super(message, StatusCodes.TOO_MANY_REQUESTS, comingFrom);\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]}